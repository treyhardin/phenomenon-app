---
import { getCollection } from 'astro:content';
import LayoutApp from '../../layouts/layoutApp.astro';
import { getEntry } from 'astro:content';
import ShapesList from '../../components/ShapesList.astro';
import { supabase } from '../../lib/supabase';
import ShapeReports from '../../components/ShapeReports.astro';

export async function getStaticPaths() {
  const shapes = await getCollection('shapes')
  return shapes?.map((shape) => {
    return { 
      params: { 
        shape: shape.data.id 
      }, 
      props: { 
        ...shape.data 
      } 
    }
  })
}

const { shape } = Astro.params
const shapeData = await getEntry('shapes', shape)


const getRecords = async () => {
  
  let { data: records, error } = await supabase
    .from('clean_data_mv')
    .select('*')
    .or(`shape.eq.${shapeData?.id},shape.eq.${shapeData?.data.name}`)
    .not('dateOccurred', 'is', null)
    .order('dateOccurred', {ascending: false})
    .limit(100)
    // .order('dateOccurred', { ascending: false })

  return records
}

const records = await getRecords()
---
<LayoutApp
  title={`UAP Shapes | ${shapeData?.data.name}`}
  activePath='shapes'
>
  <ShapesList 
    slot="sidebar"
    activeShape={shape}
  />
  <ShapeReports 
    slot="main"
    reports={records}
  />
</LayoutApp>

---
import { getCollection, getEntry } from 'astro:content';
import { supabase } from '../../../../lib/supabase';
import LayoutApp from '../../../../layouts/layoutApp.astro';
import LocationList from '../../../../components/LocationList.astro';

export async function getStaticPaths() {
  const cities = await getCollection('cities')
  const paths = cities.map((city) => ({
      params: {
        country: city.data.country,
        state: city.data.state,
        city: city.id
      },
      props: {
        recordCount: city.data.record_count,
        name: city.data.canonical_name
      }
    })
  )
  return paths.filter(Boolean) // Remove any null entries
}
const { country, state, city } = Astro.params
const { recordCount, name } = Astro.props

const countryData = await getEntry('countries', country)
const stateData = await getEntry('states', state)

const getReports = async () => {

  // console.log(`Fetching reports for ${state}...`)
  let { data: reports, error } = await supabase
    .from('clean_data_mv')
    .select('*')
    .eq('canonical_city', city)
    .limit(100)

  return reports
}

const reports = await getReports()

// let { data: reports, error } = await supabase
//   .from('records_by_city')
//   .select('records')
//   .eq('canonical_city', city)
//   .limit(1)
//   .single()
---
<LayoutApp
  title={`${name}, ${stateData?.data.canonical_name}, ${countryData?.data.canonical_name}`}
  reports={reports}
>
  <LocationList
    breadcrumbs={[
      {
        label: countryData?.data.canonical_name,
        url: `/${countryData?.data.id}`
      },
      {
        label: stateData?.data.canonical_name,
        url: `/${countryData?.data.id}/${stateData?.data.id}`
      }
    ]}
    categoryTitle={name}
    categoryCount={recordCount}
  />
</LayoutApp>
---
import { formatDate } from "../lib/utils"

// interface Props extends ReportCard;

const { id, dateOccurred, city, canonical_city, canonical_state, canonical_country, state, country, summary, shape, content } = Astro.props
const formattedDate = formatDate(dateOccurred)
// const formattedDate = dateOccurred
---
<div class="report-card">
  { summary && <p class="h3">{summary}</p>}
  <!-- {dateOccurred} -->
  { dateOccurred && formattedDate && <p>{formattedDate}</p>}
  <div class="details">

    { id && <span>{id}</span>}
    <div class="location">
      { (canonical_city || city) &&  <span>{canonical_city ? canonical_city : city}</span>}
      { (canonical_state || state) && <span>, {canonical_state ? canonical_state : state}</span>}
      { (canonical_country || country) && <span>, {canonical_country ? canonical_country : country}</span>}
    </div>
    { shape && <span>{shape}</span>}
    {content && <button popovertarget={`details_${id}`}>View Details</button>}
  </div>
</div>

{content &&
  <dialog popover id={`details_${id}`} class="detail-modal">
    {/* <p>{content}</p> */}
    <Fragment set:html={content} />
    {/* <form method="dialog"> */}
    <button popovertarget={`details_${id}`}>Close</button>
    {/* </form> */}
  </dialog>
}




<style>
  .report-card {
    border-bottom: 1px solid var(--color-background);
    padding-block: var(--space-md);

    .details {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: var(--space-xs);
    }

    .location {
      display: flex;
      flex-direction: row;
    }
  }

  .detail-modal {
    width: calc(100% - var(--page-margin) * 2);
    max-width: 30rem;
    border-radius: var(--radius-sm);
    padding-inline: var(--space-sm);
    padding-block: var(--space-lg);
  }
</style>
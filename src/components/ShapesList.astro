---
import { getCollection } from "astro:content"

const shapes = await getCollection('shapes')

const { activeShape } = Astro.props
---
<div class="shapes-list" slot="sidebar">
  <a href={`/shapes/`} class="shape-card" data-active={!activeShape ? "true" : "false"}>
    <p class="shape-name">All</p>
    <!-- <p class="record-count">{shape.data.record_count}</p> -->
  </a>
  {shapes?.map((shape) => (
    <a href={`/shapes/${shape.id}`} class="shape-card" data-active={activeShape === shape.id ? "true" : "false"}>
      <p class="shape-name">{shape.data.name}</p>
      <p class="record-count">{shape.data.record_count}</p>
    </a>
  ))}
</div>

<style>
  .shapes-list {
    display: flex;
    flex-direction: column;
    align-items: stretch;

    .shape-card {
      padding-block: var(--space-xs);
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      border-bottom: 1px solid var(--color-background-secondary);
      padding-inline: 0 var(--space-sm);
      transition: padding var(--anim-sm), background-color var(--anim-sm);
      border-radius: var(--radius-sm);

      .shape-name {
        margin: 0;
      }

      .record-count {
        color: var(--color-foreground-secondary);
        margin: 0;
      }

      &:hover,
      &[data-active="true"] {
        padding-inline-start: var(--space-2xs);
      }

      &:hover {
        background-color: var(--color-background-secondary);
      }

      &[data-active="true"] {
        background-color: var(--color-foreground);
        color: var(--color-background);
      }
    }
  }
</style>